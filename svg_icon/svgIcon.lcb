/*
  Very simple control that displays an SVG path. You can set a hilite color but you must
  specifically set the hilite property to toggle the display.
*/
widget community.livecode.trevordevore.svgicon

  use com.livecode.canvas
  use com.livecode.widget
  use com.livecode.engine
  use community.livecode.trevordevore.widgethelpers

  metadata title is "SVG Icon"
  metadata author is "Trevor DeVore"
  metadata version is "1.0.2"

  -- public
  private variable mSVGPath               as Path
  private variable mFillColor             as Color
  private variable mFillHiliteColor       as Color
  private variable mIsHilited             as Boolean
  private variable mIconSize              as optional Number

  property "highlight"                      get mIsHilited                  set setIsHilited
  property isHilited                      get mIsHilited                  set setIsHilited
  property iconSVGPath                    get getSVGPath                  set setSVGPath
  property fillColor                      get getFillColor                set setFillColor
  property fillHiliteColor                get getFillHiliteColor          set setFillHiliteColor
  property iconSize                       get mIconSize                   set setIconSize

  metadata iconSVG.editor                 is "com.livecode.pi.text"
  metadata fillColor.editor               is "com.livecode.pi.color"
  metadata fillHiliteColor.editor         is "com.livecode.pi.color"

  metadata fillColor.section              is "Colors"
  metadata fillHiliteColor.section        is "Colors"

  private handler setIsHilited(in pBoolean as Boolean)
    put pBoolean into mIsHilited
    redraw all
  end handler


  private handler getSVGPath() returns String
    return the instructions of mSVGPath
  end handler

  private handler setSVGPath(in pPath as String)
    put path pPath into mSVGPath
    calculatePaths()
    redraw all
  end handler


  private handler getFillColor() returns String
    return colorToString(mFillColor, false)
  end handler

  private handler setFillColor(in pString as String)
    put stringToColor(pString) into mFillColor
    redraw all
  end handler


  private handler getFillHiliteColor() returns String
    return colorToString(mFillHiliteColor, false)
  end handler

  private handler setFillHiliteColor(in pString as String)
    put stringToColor(pString) into mFillHiliteColor
    redraw all
  end handler


  public handler setIconSize(in pSize as Number)
    if pSize <= 0 then
      put nothing into mIconSize
    else
      put pSize into mIconSize
    end if
    calculatePaths()
    redraw all
  end handler


  public handler OnCreate()
    put false into mIsHilited
    put color [0.4,0.4,0.4] into mFillColor
    put color [0,0,0] into mFillHiliteColor
    put nothing into mIconSize
    put path "M8.4,0L0,8.4L1.6,10l6.8-6.8l6.8,6.8l1.6-1.6L8.4,0z M2.4,10.5V16h4.3v-5h3.4v5h4.3v-5.5l-6-6L2.4,10.5z" into mSVGPath
  end handler


  public handler OnSave(out rProperties as Array)
    put the empty array into rProperties

    put mIsHilited into rProperties["isHilited"]
    put the instructions of mSVGPath into rProperties["iconSVGPath"]
    put colorToString(mFillColor, true) into rProperties["fillColor"]
    put colorToString(mFillHiliteColor, true) into rProperties["fillHiliteColor"]
    put mIconSize into rProperties["icon size"]
  end handler


  public handler OnLoad(in pProperties as Array)
    put pProperties["isHilited"] into mIsHilited
    put path pProperties["iconSVGPath"] into mSVGPath
    put stringToColor(pProperties["fillColor"]) into mFillColor
    put stringToColor(pProperties["fillHiliteColor"]) into mFillHiliteColor

    if "icon size" is among the keys of pProperties then
      if pProperties["icon size"] is not nothing then
        put pProperties["icon size"] into mIconSize
      else
        put nothing into mIconSize
      end if
    end if
  end handler


  public handler OnOpen()
    calculatePaths()
  end handler


  public handler OnPaint()
    begin layer on this canvas

    if my enabled then
      set the opacity of this canvas to 1.0
    else
      set the opacity of this canvas to 0.5
    end if

    set the paint of this canvas to solid paint with getColor()
    fill mSVGPath on this canvas

    end layer on this canvas
  end handler


  public handler OnMouseUp()
    if the current mouse position is within my bounds then
      post "mouseUp" to my script object with [FormatInt(the click button)]
    else
      post "mouseRelease" to my script object with [FormatInt(the click button)]
    end if
  end handler


  public handler OnMouseCancel()
    post "mouseRelease" to my script object with [FormatInt(the click button)]
  end handler


  public handler OnMouseDown()
    post "mouseDown" to my script object with [FormatInt(the click button)]
  end handler


  public handler OnGeometryChanged()
    calculatePaths()
    redraw all
  end handler


  private handler calculatePaths()
    if mIconSize is nothing then
      transform mSVGPath by scaleAndMaintainAspectRatioTransform(the bounding box of mSVGPath, my bounds, my rectangle)
    else
      transform mSVGPath by scaleAndMaintainAspectRatioTransform(the bounding box of mSVGPath, rectangle[0,0,mIconSize,mIconSize], my rectangle)
    end if
    centerBoxWithinBox(mSVGPath, rectangle path of my bounds)
  end handler


  private handler getColor() returns Color
    if mIsHilited then
      return mFillHiliteColor
    else
      return mFillColor
    end if
  end handler

end widget
